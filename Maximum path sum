class Solution:
    def findMaxSum(self, root): 
        self.max_sum = float('-inf')
        
        def dfs(node):
            if not node:
                return 0
            
            # Compute maximum path sum from left and right subtrees
            left_gain = max(0, dfs(node.left))
            right_gain = max(0, dfs(node.right))
            
            # Max path passing through this node
            current_path = node.data + left_gain + right_gain
            
            # Update global maximum
            self.max_sum = max(self.max_sum, current_path)
            
            # Return max gain if path continues upwards
            return node.data + max(left_gain, right_gain)
        
        dfs(root)
        return self.max_sum
