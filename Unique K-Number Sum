class Solution:
    def combinationSum(self, n, k):
        res = []

        def backtrack(start, path, curr_sum):
            # if combination of length k is found
            if len(path) == k:
                if curr_sum == n:
                    res.append(path[:])  # add a copy
                return

            # try next numbers
            for num in range(start, 10):  # numbers 1..9
                if curr_sum + num > n:  # prune
                    break
                path.append(num)
                backtrack(num + 1, path, curr_sum + num)
                path.pop()

        backtrack(1, [], 0)
        return res
