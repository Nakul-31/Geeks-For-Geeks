from collections import deque

class SpecialQueue:
    def __init__(self):
        self.q = deque()        # main queue
        self.minDeque = deque() # to track minimums
        self.maxDeque = deque() # to track maximums

    def enqueue(self, x):
        # normal queue
        self.q.append(x)
        
        # maintain increasing order for minDeque
        while self.minDeque and self.minDeque[-1] > x:
            self.minDeque.pop()
        self.minDeque.append(x)
        
        # maintain decreasing order for maxDeque
        while self.maxDeque and self.maxDeque[-1] < x:
            self.maxDeque.pop()
        self.maxDeque.append(x)

    def dequeue(self):
        if not self.q:
            return
        val = self.q.popleft()
        if self.minDeque[0] == val:
            self.minDeque.popleft()
        if self.maxDeque[0] == val:
            self.maxDeque.popleft()

    def getFront(self):
        return self.q[0] if self.q else None

    def getMin(self):
        return self.minDeque[0] if self.minDeque else None

    def getMax(self):
        return self.maxDeque[0] if self.maxDeque else None
